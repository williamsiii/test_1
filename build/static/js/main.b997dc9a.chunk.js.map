{"version":3,"sources":["img/loader.gif","components/form.tsx","components/create.component.tsx","actions/index.ts","components/update.component.tsx","components/singleAd.tsx","components/read.component.tsx","App.tsx","serviceWorker.js","reducers/adReducers.ts","store.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Select","require","default","cities","map","x","value","label","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fileInput","state","titleValid","descriptionValid","numberValid","nextProps","prevState","obj","image","length","canvas","document","getElementById","height","changeImage","field","Boolean","e","onChangeTitle","onChangeDescription","onChangeNumber","onCityChange","getBase64","preventDefault","title","setState","description","number","match","Number","onSubmit","file","_this2","reader","FileReader","readAsDataURL","onload","result","onImageChange","img","Image","ctx","getContext","width","drawImage","src","_this3","react_default","a","createElement","className","type","placeholder","maxLength","onChange","checkValid","city","options","id","ref","accept","onFileChange","target","files","action","React","Component","Create","currentTarget","ads","localStorage","getItem","JSON","parse","newAd","push","addItem","setItem","stringify","components_form","style","marginTop","connect","store","dispatch","arg","ad","objectSpread","Update","params","filter","err","Error","updatedAd","updateItem","history","_this4","SingleAd","isLoaded","getAuthor","rnd","Math","floor","random","fetch","concat","mode","method","headers","Accept","resp","json","list","assignAdToAuthor","name","console","log","_context","t0","loader","alt","react_router_dom","to","onClick","onDelete","adId","Read","adsString","deleteItem","pageSize","pageNum","page","rows","adsList","slice","object","i","singleAd","key","changePage","colSpan","onPrevPage","onNextPage","App","react_router","exact","path","component","window","location","hostname","adReds","totalPages","defaultState","init","ceil","ReactDOM","render","es","arguments","undefined","createStore","applyMiddleware","thunk","configureStore","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b997dc9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.91931453.gif\";","import React from 'react';\r\nconst Select = require('react-select').default;\r\n\r\nconst cities = [\r\n    '',\r\n    \"Абакан\",\r\n    \"Азов\",\r\n    \"Александров\",\r\n    \"Алексин\",\r\n    \"Альметьевск\",\r\n    \"Анапа\",\r\n    \"Ангарск\",\r\n    \"Анжеро-Судженск\",\r\n    \"Апатиты\",\r\n    \"Арзамас\",\r\n    \"Армавир\",\r\n    \"Арсеньев\",\r\n    \"Артем\",\r\n    \"Архангельск\",\r\n    \"Асбест\",\r\n    \"Астрахань\",\r\n    \"Ачинск\",\r\n    \"Балаково\",\r\n    \"Балахна\",\r\n    \"Балашиха\",\r\n    \"Балашов\",\r\n    \"Барнаул\",\r\n    \"Батайск\",\r\n    \"Белгород\",\r\n    \"Белебей\",\r\n    \"Белово\",\r\n    \"Белогорск (Амурская область)\",\r\n    \"Белорецк\",\r\n    \"Белореченск\",\r\n    \"Бердск\",\r\n    \"Березники\"\r\n].map((x) => ({value: x, label: x}));\r\n\r\n\r\n\r\n\r\nclass Form extends React.Component<any, any> {\r\n    fileInput: HTMLInputElement | null = null;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            titleValid: true,\r\n            descriptionValid: true,\r\n            numberValid: true\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: any, prevState: any){\r\n\r\n        if (nextProps.obj && nextProps.obj.image && nextProps.obj.image.length === 0) {\r\n            const canvas: HTMLCanvasElement | null = document.getElementById('canvas') as HTMLCanvasElement;\r\n            if (canvas)\r\n                canvas.height = 0;\r\n        } else {\r\n            if (nextProps.obj && nextProps.obj.image)\r\n                this.changeImage(nextProps.obj.image)\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    checkValid(field: string): string {\r\n        return Boolean(this.state[field]) ? 'hide' : 'error';\r\n    }\r\n\r\n    onChangeTitle(e: React.FormEvent<HTMLInputElement> ): void {\r\n\r\n        this.props.onChangeTitle && this.props.onChangeTitle(e);\r\n    }\r\n\r\n    onChangeDescription(e: React.FormEvent<HTMLInputElement>): void {\r\n        this.props.onChangeDescription && this.props.onChangeDescription(e);\r\n    }\r\n\r\n    onChangeNumber(e: React.FormEvent<HTMLInputElement> ): void {\r\n        this.props.onChangeNumber && this.props.onChangeNumber(e);\r\n    }\r\n\r\n    onCityChange(e: React.FormEvent<HTMLInputElement> ): void {\r\n        this.props.onCityChange && this.props.onCityChange(e);\r\n    }\r\n\r\n    onFileChange(e: FileList ){\r\n        this.getBase64(e[0]);\r\n    }\r\n\r\n    onSubmit(e: React.FormEvent<HTMLInputElement>) {\r\n        e.preventDefault();\r\n\r\n        let titleValid = true, descriptionValid = true, numberValid = true;\r\n        if (this.props.obj.title.length === 0 || this.props.obj.title.length > 100)\r\n            titleValid = false;\r\n        this.setState({titleValid: titleValid});\r\n\r\n        if (this.props.obj.description.length > 300)\r\n            descriptionValid = false;\r\n        this.setState({descriptionValid: descriptionValid});\r\n\r\n        if (!this.props.obj.number.match(/^\\+7\\(\\d{3}\\)\\d{3}-\\d{2}-\\d{2}$/))\r\n            numberValid = false;\r\n        this.setState({numberValid: numberValid});\r\n\r\n        if (Number(numberValid) * Number(descriptionValid) * Number(numberValid))\r\n        {\r\n            this.props.onSubmit && this.props.onSubmit();\r\n        }\r\n\r\n        const canvas: HTMLCanvasElement = document.getElementById('canvas') as HTMLCanvasElement;\r\n        canvas.height = 0;\r\n        if (this.fileInput) this.fileInput.value = '';\r\n    }\r\n\r\n    getBase64(file: Blob) {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n            this.changeImage(reader.result as string);\r\n            this.props.onImageChange && this.props.onImageChange(reader.result)\r\n        };\r\n    }\r\n\r\n    changeImage(image: string){\r\n        const img = new Image();\r\n        img.onload = function(){\r\n            const canvas: HTMLCanvasElement = document.getElementById('canvas') as HTMLCanvasElement;\r\n            const ctx: CanvasRenderingContext2D | null = canvas.getContext(\"2d\");\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            ctx && ctx.drawImage(img,0,0);\r\n        };\r\n        img.src = image;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(e: any) => this.onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <label>Название:  </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder={\"Название\"}\r\n                        value={this.props.obj.title}\r\n                        maxLength={100}\r\n                        onChange={(e) => this.onChangeTitle(e)}\r\n                    />\r\n                    <div className={this.checkValid('titleValid')}>Обязательно для заполнения. Не более 100 символов</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Описание: </label>\r\n                    <input type=\"text\"\r\n                           className=\"form-control\"\r\n                           placeholder={\"Описание\"}\r\n                           value={this.props.obj.description}\r\n                           maxLength={300}\r\n                           onChange={(e) => this.onChangeDescription(e)}\r\n                    />\r\n                    <div className={this.checkValid('descriptionValid')}>Не более 300 символов</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Номер телефона: </label>\r\n                    <input type=\"text\"\r\n                           className=\"form-control\"\r\n                           placeholder={\"+7(999)999-99-99\"}\r\n                           value={this.props.obj.number}\r\n                           onChange={(e) => this.onChangeNumber(e)}\r\n                    />\r\n                    <div className={this.checkValid('numberValid')}>Обязательно для заполнения. Формат ввода: +7(999)999-99-99</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <Select\r\n                        value={this.props.obj.city}\r\n                        placeholder={this.props.obj.city || \"Выберите город\"}\r\n                        onChange={(e: any) =>  this.onCityChange(e)}\r\n                        options={cities}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <canvas id=\"canvas\" height=\"0\"/>\r\n                    <input ref={(e) => this.fileInput = e}\r\n                           type=\"file\"\r\n                           accept=\"image/*\"\r\n                           className=\"form-control\"\r\n                           onChange={(e) => this.onFileChange(e.target.files!)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" value={this.props.action || \"Сохранить\"} className=\"btn btn-primary\"/>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Form;","import React from 'react';\r\nimport Form from \"./form\";\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../actions';\r\nimport {AdType} from '../App';\r\n\r\n\r\n\r\nclass Create extends React.Component<any, AdType> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id:0,\r\n            title: '',\r\n            description: '',\r\n            number: '',\r\n            city: '',\r\n            image: ''\r\n        }\r\n    }\r\n\r\n    onChangeTitle(e: React.FormEvent<HTMLInputElement>): void {\r\n        this.setState({\r\n            title: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    onChangeDescription(e: React.FormEvent<HTMLInputElement>): void {\r\n        this.setState({\r\n            description: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    onChangeNumber(e: React.FormEvent<HTMLInputElement>): void {\r\n        this.setState({\r\n            number: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    onCityChange(e: any): void {\r\n        this.setState({\r\n            city: e.value\r\n        })\r\n    }\r\n\r\n    onImageChange(e: string): void {\r\n        this.setState({\r\n            image: e\r\n        })\r\n    }\r\n\r\n    onSubmit(): void {\r\n        const ads = localStorage.getItem('ads') ? JSON.parse(localStorage.getItem('ads')!) : {ads:[]};\r\n        const id = ads.ads.length ? ads.ads[ads.ads.length-1].id + 1 : 0;\r\n        const newAd = {\r\n            id,\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            number: this.state.number,\r\n            city: this.state.city,\r\n            image: this.state.image\r\n        };\r\n        ads.ads.push(newAd);\r\n            \r\n        this.props.addItem({'ads':newAd});\r\n\r\n        localStorage.setItem('ads', JSON.stringify(ads));\r\n        this.setState({\r\n            title: '',\r\n            description: '',\r\n            number: '',\r\n            city: '',\r\n            image: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <h3>Создать объявление</h3>\r\n                <Form\r\n                    style={{marginTop: 10}}\r\n                    obj={this.state}\r\n                    action=\"Создать\"\r\n                    onSubmit={() => this.onSubmit()}\r\n                    onChangeTitle={(e: React.FormEvent<HTMLInputElement>) => this.onChangeTitle(e)}\r\n                    onChangeDescription={(e: React.FormEvent<HTMLInputElement>) => this.onChangeDescription(e)}\r\n                    onChangeNumber={(e: React.FormEvent<HTMLInputElement>) => this.onChangeNumber(e)}\r\n                    onCityChange={(e: React.FormEvent<HTMLInputElement>) => this.onCityChange(e)}\r\n                    onImageChange={(e: string) => this.onImageChange(e)}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    addItem: (arg: any) => dispatch(addItem(arg))\r\n});\r\nconst mapStateToProps = (state: any) => ({\r\n    store: state\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);","import {AdType} from '../App';\r\n\r\n\r\nexport const addItem = (ad: AdType) => ({\r\n  type: 'ADD_ITEM',\r\n  ...ad\r\n});\r\n\r\nexport const updateItem = (ad: AdType) => ({\r\n  type: 'UPDATE_ITEM',\r\n  ...ad\r\n});\r\n\r\nexport const deleteItem = (id: number) => ({\r\n  type: 'DELETE_ITEM',\r\n  id\r\n});\r\n\r\nexport const assignAdToAuthor = (adId: number, name: string) => ({\r\n    type: 'ASSIGN_AD',\r\n    adId,\r\n    name\r\n});\r\n\r\nexport const changePage = (page: number) => ({\r\n    type: 'CHANGE_PAGE',\r\n    page\r\n});\r\n","import React from 'react';\r\nimport Form from \"./form\";\r\nimport {updateItem} from \"../actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {AdType} from '../App';\r\n\r\nclass Update extends React.Component<any, AdType> {\r\n\r\n    public ads: any = null;\r\n    public id: number = 0;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: 0,\r\n            title: '',\r\n            description: '',\r\n            number:'',\r\n            city: '',\r\n            image: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            this.id = Number(this.props.match.params.id);\r\n            this.ads = JSON.parse(localStorage.getItem('ads')!);\r\n            const ad = this.ads.ads.filter((x: AdType) => x.id === this.id)[0];\r\n            this.setState({\r\n                id: this.id,\r\n                title: ad.title,\r\n                description: ad.description,\r\n                number: ad.number,\r\n                city: ad.city,\r\n                image: ad.image\r\n            });\r\n        } catch(err){\r\n            throw Error(err);\r\n        }\r\n    }\r\n\r\n    onChangeTitle(e: React.FormEvent<HTMLInputElement>) {\r\n        this.setState({\r\n            title: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    onChangeDescription(e: React.FormEvent<HTMLInputElement>) {\r\n        this.setState({\r\n            description: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    onChangeNumber(e: React.FormEvent<HTMLInputElement>) {\r\n        this.setState({\r\n            number: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    onCityChange(e: any) {\r\n        this.setState({\r\n            city: e.value\r\n        })\r\n    }\r\n\r\n    onImageChange(e: string) {\r\n        this.setState({\r\n            image: e\r\n        })\r\n    }\r\n\r\n    onSubmit() {\r\n        const updatedAd = {\r\n            id: this.id,\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            number: this.state.number,\r\n            city: this.state.city,\r\n            image: this.state.image\r\n        };\r\n        this.ads.ads = this.ads.ads.map((x: AdType) => {\r\n            return x.id === this.id ? updatedAd : x;\r\n        });\r\n\r\n        this.props.updateItem({ad:updatedAd});\r\n\r\n        const ads = JSON.stringify(this.ads);\r\n        localStorage.setItem('ads', ads);\r\n\r\n        this.props.history.push('/read');\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Редактировать объявление</h3>\r\n                <Form\r\n                    obj={this.state}\r\n                    onSubmit={() => this.onSubmit()}\r\n                    onChangeTitle={(e: React.FormEvent<HTMLInputElement>) => this.onChangeTitle(e)}\r\n                    onChangeDescription={(e: React.FormEvent<HTMLInputElement>) => this.onChangeDescription(e)}\r\n                    onChangeNumber={(e: React.FormEvent<HTMLInputElement>) => this.onChangeNumber(e)}\r\n                    onCityChange={(e: React.FormEvent<HTMLInputElement>) => this.onCityChange(e)}\r\n                    onImageChange={(e: string) => this.onImageChange(e)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    updateItem: (arg: any) => dispatch(updateItem(arg))\r\n});\r\n\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(Update);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport loader from '../img/loader.gif';\r\nimport {connect} from \"react-redux\";\r\nimport {assignAdToAuthor} from '../actions';\r\n\r\ninterface singleAdState {\r\n    isLoaded: boolean\r\n}\r\n\r\nclass SingleAd extends React.Component<any, singleAdState> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAuthor();\r\n    }\r\n\r\n    async getAuthor(){\r\n        // случайным образом получаем автора для объявления\r\n        const rnd = Math.floor(Math.random() * 3) + 1;\r\n\r\n        try {\r\n\r\n            const resp = await fetch(`http://my-json-server.typicode.com/williamsiii/test_1/authors/${rnd}`,\r\n                {\r\n                    mode: \"cors\",\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Accept\": \"application/json\"\r\n                    }\r\n                })\r\n\r\n            const list: any = await resp.json();\r\n            // прикрепляем объявление к автору\r\n            this.props.assignAdToAuthor(this.props.obj.id, list.name);\r\n            this.setState({isLoaded: true})\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    {this.props.obj.title}\r\n                </td>\r\n                <td>\r\n                    {this.props.obj.description}\r\n                </td>\r\n                <td>\r\n                    {this.props.obj.number}\r\n                </td>\r\n                <td>\r\n                    {this.props.obj.city}\r\n                </td>\r\n                <td>\r\n                    {!this.state.isLoaded ?\r\n                        <img width=\"40\" height=\"30\" src={loader} alt=\"loading...\" />\r\n                        :\r\n                        this.props.obj.name\r\n                    }\r\n                </td>\r\n                <td>\r\n                    <Link to={\"/update/\"+this.props.obj.id} className=\"btn btn-primary\">Редактировать</Link>\r\n                </td>\r\n                <td>\r\n                    <button onClick={(e) => this.props.onDelete(this.props.obj.id)}  className=\"btn btn-danger\">Удалить</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    assignAdToAuthor: (id: number, name: string) => dispatch(assignAdToAuthor(id, name))\r\n});\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(SingleAd);","import React from 'react';\r\nimport SingleAd from \"./singleAd\";\r\nimport {deleteItem, changePage} from \"../actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {AdType} from '../App';\r\n\r\nclass Read extends React.Component<any> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const adsString: string = localStorage.getItem('ads')!;\r\n\r\n        if (adsString){\r\n            const ads: any = JSON.parse(adsString);\r\n            if (ads.ads)\r\n                this.setState({ads: ads.ads});\r\n        }\r\n    }\r\n\r\n    onDelete(id: number) {\r\n        const adsString: string = localStorage.getItem('ads')!;\r\n        if (adsString){\r\n            const ads: any = JSON.parse(adsString);\r\n            ads.ads = ads.ads.filter((x: AdType) => x.id !== id);\r\n            if (ads.ads)\r\n                this.setState({ads: ads.ads});\r\n\r\n            this.props.deleteItem(id);\r\n            localStorage.setItem('ads', JSON.stringify(ads));\r\n        }\r\n    }\r\n\r\n    rows(): React.Component<any>{\r\n        const pageSize = this.props.store.pageSize;\r\n        const pageNum = this.props.store.page;\r\n        const rows = this.props.store.adsList.slice( pageSize * pageNum, pageSize * (pageNum + 1) );\r\n        return rows.map((object: AdType, i: number) => <SingleAd obj={object} onDelete={(e: number) => this.onDelete(e)} key={pageSize * pageNum + i} />);\r\n    }\r\n\r\n    onPrevPage() {\r\n        this.props.changePage(--this.props.store.page);\r\n    }\r\n\r\n    onNextPage() {\r\n        this.props.changePage(++this.props.store.page);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Список объявлений</h3>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Название</th>\r\n                        <th>Описание</th>\r\n                        <th>Телефон</th>\r\n                        <th>Город</th>\r\n                        <th>Автор</th>\r\n                        <th colSpan={2}>Действие</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { this.rows() }\r\n                    </tbody>\r\n                </table>\r\n                <button className=\"btn\" onClick={() => this.onPrevPage()} >Назад</button>\r\n                <button className=\"btn\" onClick={() => this.onNextPage()} >Вперёд</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    deleteItem: (arg: any) => dispatch(deleteItem(arg)),\r\n    changePage: (page: any) => dispatch(changePage(page))\r\n});\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    store: state\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Read);","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport Create from './components/create.component';\r\nimport Update from './components/update.component';\r\nimport Read from './components/read.component';\r\n\r\nclass App extends React.Component<any> {\r\n  render() {\r\n    return (\r\n        <Router>\r\n            <div className=\"container\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <Link to={'/'} className=\"navbar-brand\">Объявления</Link>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={'/'} className=\"nav-link\">Список</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={'/create'} className=\"nav-link\">Создать</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav> <br/>\r\n                <Switch>\r\n                    <Route exact path='/create' component={ Create } />\r\n                    <Route path='/update/:id' component={ Update } />\r\n                    <Route path='/' component={ Read } />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\nexport interface AdType {\r\n    id: number;\r\n    title: string;\r\n    description?: string;\r\n    number: string;\r\n    city?: string;\r\n    image?: string;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {AdType} from '../App';\r\nimport {IStoreState} from '../store';\r\n\r\n\r\nconst adReds = (state: IStoreState | any, action: any) => {\r\n    switch (action.type) {\r\n        case 'ADD_ITEM':\r\n            state.adsList.push(action.ads as AdType);\r\n            return state;\r\n        case 'UPDATE_ITEM':\r\n            return {\r\n                ...state,\r\n                adsList: state.adsList.map((ad: AdType) =>\r\n                    (ad.id === action.ad.id) ? action.ad : ad)\r\n              };\r\n        case 'DELETE_ITEM':\r\n            return {\r\n                ...state,\r\n                adsList: state.adsList.filter((ad: AdType) => (ad.id !== action.id))\r\n            };\r\n        case 'ASSIGN_AD':\r\n            return {\r\n                ...state,\r\n                adsList: state.adsList.map((ad: AdType) =>\r\n                    (ad.id !== action.adId) ? ad :\r\n                        ({...ad, name: action.name}))\r\n            };\r\n        case 'CHANGE_PAGE':\r\n            let page = action.page;\r\n            if (page < 0) page = 0;\r\n            if (page > state.totalPages - 1) page = state.totalPages - 1;\r\n\r\n            return {\r\n                ...state,\r\n                page\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default adReds\r\n","import {createStore, applyMiddleware, Store} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport adReds from './reducers/adReducers';\r\nimport {AdType} from './App';\r\n\r\nexport interface IStoreState {\r\n    adsList: Array<AdType>,\r\n    page: number,\r\n    pageSize: number,\r\n    totalPages: number\r\n}\r\n\r\nconst defaultState: IStoreState = {\r\n    adsList: [],\r\n    page: 0,\r\n    pageSize: 0,\r\n    totalPages: 0\r\n};\r\n\r\nexport default function configureStore(init: any | IStoreState = defaultState): Store<IStoreState> {\r\nreturn createStore(\r\n        adReds,\r\n        init,\r\n        applyMiddleware(thunk)\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport configureStore, {IStoreState} from './store';\r\n\r\n\r\n// получаемый сохранённое состояние или создаём пустое\r\nconst pageSize = 5;\r\nconst ads: Array<any> = localStorage.getItem('ads') ? JSON.parse(localStorage.getItem('ads')!).ads : [];\r\nconst init: IStoreState = {adsList: ads, page: 0, pageSize, totalPages: Math.ceil(ads.length / pageSize)};\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore(init)}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}